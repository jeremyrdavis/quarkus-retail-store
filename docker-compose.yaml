version: '3'

services:
  retail-db:
    image: postgres:11
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=retailuser
      - POSTGRES_PASSWORD=redhat-21
      - POSTGRES_DB=retaildb
    volumes:
      - ./init-postgresql.sql:/docker-entrypoint-initdb.d/init-postgresql.sql
    networks:
      - my-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-r}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - my-network
  zookeeper:
    image: debezium/zookeeper:1.5
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    networks:
      - my-network
  kafka:
    image: debezium/kafka:1.5
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - my-network
  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9100:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
      - JVM_OPTS=-Xms32M -Xmx64M
    depends_on:
      - kafka
    networks:
      - my-network
  connect:
    image: debezium/connect:1.5
    ports:
      - "8083:8083"
    links:
      - kafka
      - retail-db
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - my-network
networks:
  my-network:
    name: retail-network
